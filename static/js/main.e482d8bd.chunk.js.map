{"version":3,"sources":["components/CartItem/CartItem_styles.tsx","components/CartItem/CartItem.tsx","components/Cart/Cart_styles.ts","components/Cart/Cart.tsx","components/Item/Item_style.ts","components/Item/Item.tsx","App_styles.tsx","App.tsx","index.tsx"],"names":["Wrapper","styled","div","CartItem","item","addToCart","removeFromCart","title","className","price","amount","toFixed","Button","size","disableElevation","variant","onClick","id","src","image","alt","aside","Cart","items","cartItems","length","map","reduce","acc","Item","handleAddToCart","description","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","queryClient","QueryClient","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.e482d8bd.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 20px;\n  div {\n    flex: 1;\n  }\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;","import Button from '@material-ui/core/Button';\nimport { Wrapper } from './CartItem_styles';\n\nimport { CartItemType } from '../../App';\n\ntype Props = {\n  item: CartItemType;\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n};\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => {\n  return (\n    <Wrapper>\n      <div>\n        <h3>{item.title}</h3>\n        <div className='information'>\n        <p>Price: ${item.price}</p>\n        <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n      </div>\n      <div className='buttons'>\n        <Button\n          size='small'\n          disableElevation\n          variant='contained'\n          onClick={() => removeFromCart(item.id)}\n        >\n          -\n        </Button>\n        <p>{item.amount}</p>\n        <Button\n          size='small'\n          disableElevation\n          variant='contained'\n          onClick={() => addToCart(item)}\n        >\n          +\n        </Button>\n      </div>\n    </div>\n    <img src={item.image} alt={item.title} />\n    </Wrapper>\n\n  )\n}\n\nexport default CartItem;","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`;","import CartItem from \"../CartItem/CartItem\";\nimport { Wrapper } from \"./Cart_styles\";\n\nimport { CartItemType } from \"../../App\";\n\ntype Props = {\n  cartItems: CartItemType[];\n  addToCart: (clickedItem: CartItemType) => void;\n  removeFromCart: (id: number) => void;\n}\n\nconst Cart: React.FC<Props> = ({cartItems, addToCart, removeFromCart}) => {\n  const calculateTotal = (items: CartItemType[]) =>\n    items.reduce((acc: number, item) => acc + item.amount * item.price, 0);\n\n  return (\n    <Wrapper>\n      <h2>Your Shopping Cart</h2>\n      {cartItems.length === 0\n        ? <p>No items in cart.</p>\n        : null\n      }\n\n      {cartItems.map(item => (\n        <CartItem\n          key={item.id}\n          item={item}\n          addToCart={addToCart}\n          removeFromCart={removeFromCart}\n        />\n      ))}\n      <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n    </Wrapper>\n  )\n}\n\nexport default Cart;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid lightblue;\n  border-radius: 20px;\n  height: 100%;\n\n  button {\n    border-radius: 0 0 20px 20px;\n  }\n\n  img {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius: 20px 20px 0 0;\n  }\n\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;","import Button from '@material-ui/core/Button';\nimport { CartItemType } from \"../../App\";\nimport { Wrapper } from \"./Item_style\";\n\ntype Props = {\n  item: CartItemType;\n  handleAddToCart: (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({item, handleAddToCart}) => {\n  return (\n    <Wrapper>\n      <img src={item.image} alt={item.title} />\n      <div>\n        <h3>{item.title}</h3>\n        <p>{item.description}</p>\n        <h3>${item.price}</h3>\n      </div>\n      <Button onClick={() => handleAddToCart(item)}>\n        Add to cart\n      </Button>\n    </Wrapper>\n  )}\n\nexport default Item;","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const Wrapper = styled.div`\n  margin: 40px;\n`;\n\nexport const StyledButton = styled(IconButton)`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`;\n","import { useState } from \"react\";\nimport { useQuery } from \"react-query\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Item from \"./components/Item/Item\";\n\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\nimport { Wrapper, StyledButton } from \"./App_styles\";\n\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n};\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n  const [cartOpen, setCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([] as CartItemType[]);\n  const { data, isLoading, error} = useQuery<CartItemType[]>(\n    'products',\n    getProducts\n  );\n\n  const getTotalItems = (items: CartItemType[]) => items.reduce((acc: number, item) => acc + item.amount, 0);\n\n\n  const handleAddToCart = (clickedItem: CartItemType) => {\n    setCartItems(prev => {\n      const isItemInCart = prev.find(item => item.id === clickedItem.id);\n\n      if (isItemInCart) {\n        return prev.map(item => (\n          item.id === clickedItem.id\n            ? { ...item, amount: item.amount + 1 }\n            : item\n        ))\n      }\n\n      return [...prev, { ...clickedItem, amount: 1 }]\n    })\n  };\n\n  const handleRemoveFromCart = (id: number) => {\n    setCartItems(prev =>\n      prev.reduce((acc, item) => {\n        if (item.id === id) {\n          if (item.amount === 1) {\n            return acc;\n          }\n\n          return [...acc, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...acc, item];\n        }\n      }, [] as CartItemType[])\n    );\n  };\n\n  if (isLoading) {\n    return <LinearProgress />\n  }\n\n  if (error) {\n    return <div>Something went wrong...</div>\n  }\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4}>\n            <Item\n              item={item}\n              handleAddToCart={handleAddToCart}\n            />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <QueryClientProvider client={queryClient}>\n    <App />\n  </QueryClientProvider>,\n  document.getElementById('root'));"],"sourceRoot":""}